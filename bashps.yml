---
- hosts: all
  gather_facts: false
  vars_files:
    - vars/bashps/{{ env }}.yml
 
  tasks:
  - name: get current hostname
    shell: hostname
    register: cur_hostname
    tags: hostname

  - name: convert hostname to lowercase
    hostname:
      name: "{{ cur_hostname.stdout | lower }}"
    when: cur_hostname.stdout.islower() == False
    tags: hostname

#  - include: tasks/check_hostname.yml
  
  - name: find all bashrc
    shell: find /home -type f -name .bashrc
    register: result
    tags: ps

  - name: remove PS1 from all bashrc I
    replace:
      backup: yes
      dest: "{{ item }}"
      regexp: \# this block is managed by Ansible\nPS1=.*\n.*m.*\n.*31m.*\n# block end
      replace: ''
    with_items:
      - "{{ result.stdout_lines }}"
      - /root/.bashrc
      - /etc/skel/.bashrc
      - /etc/bashrc
    tags: ps
    when: env is defined

  - name: remove PS1 from all bashrc II
    replace:
      backup: yes
      dest: "{{ item }}"
      regexp: PS1=.*\n.*m.*\n.*31m.*
      replace: ''
    with_items:
      - "{{ result.stdout_lines }}"
      - /root/.bashrc
      - /etc/skel/.bashrc
      - /etc/bashrc
    tags: ps
    when: env is defined

  - name: replace PS1 
    blockinfile:
      backup: yes
      block: "{{ bashps }}"
      dest: "{{ item }}"
      state: present
      insertafter: .*PS1=.*
      insertafter: PS1=.*\n.*m.*\n.*31m.*
    with_items:
      - "{{ result.stdout_lines }}"
      - /root/.bashrc
      - /etc/skel/.bashrc
      - /etc/bashrc
    tags: ps
    when: env is defined


#  - name: append ps1 to bashrc
#    lineinfile: |
#      dest="{{ item }}"
#      line="{{ bashps }}"
#      insertafter=EOF
#    with_items:
#      - "{{ result.stdout_lines }}"
#      - /root/.bashrc
#      - /etc/bashrc
#      - /etc/skel/.bashrc
#    when: env is defined
#    tags: ps
